// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<ModuleContext
  style={
    Object {
      "color": "red",
    }
  }
>
  <_class
    context={
      Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_changedBits": 0,
        "_currentRenderer": Object {},
        "_currentValue": undefined,
        "_defaultValue": undefined,
      }
    }
    style={
      Object {
        "color": "red",
      }
    }
  >
    <SubscribeWrap
      text="is"
    >
      <_class3
        text="is"
        theme={
          Object {
            "backgroundColor": "pink",
            "color": "red",
          }
        }
      >
        <span
          style={
            Object {
              "backgroundColor": "pink",
              "color": "red",
              "padding": 10,
            }
          }
        >
          is
        </span>
      </_class3>
    </SubscribeWrap>
    <ModuleContext
      style={
        Object {
          "color": "green",
        }
      }
    >
      <_class
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_changedBits": 0,
            "_currentRenderer": Object {},
            "_currentValue": undefined,
            "_defaultValue": undefined,
          }
        }
        style={
          Object {
            "color": "green",
          }
        }
      >
        <SubscribeWrap
          text="it"
        >
          <_class3
            text="it"
            theme={
              Object {
                "backgroundColor": "pink",
                "color": "green",
              }
            }
          >
            <span
              style={
                Object {
                  "backgroundColor": "pink",
                  "color": "green",
                  "padding": 10,
                }
              }
            >
              it
            </span>
          </_class3>
        </SubscribeWrap>
        <SubscribeWrap>
          <TransformContext
            theme={
              Object {
                "backgroundColor": "pink",
                "color": "green",
              }
            }
          >
            <_class2
              context={
                Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_changedBits": 0,
                  "_currentRenderer": Object {},
                  "_currentValue": undefined,
                  "_defaultValue": undefined,
                }
              }
              theme={
                Object {
                  "backgroundColor": "pink",
                  "color": "green",
                }
              }
            >
              <SubscribeWrap
                text="friday"
              >
                <_class3
                  text="friday"
                  theme={
                    Object {
                      "backgroundColor": "rgb(0, 63, 52)",
                      "color": "rgb(255, 127, 255)",
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "backgroundColor": "rgb(0, 63, 52)",
                        "color": "rgb(255, 127, 255)",
                        "padding": 10,
                      }
                    }
                  >
                    friday
                  </span>
                </_class3>
              </SubscribeWrap>
              <SubscribeWrap>
                <TransformContext
                  theme={
                    Object {
                      "backgroundColor": "rgb(0, 63, 52)",
                      "color": "rgb(255, 127, 255)",
                    }
                  }
                >
                  <_class2
                    context={
                      Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_changedBits": 0,
                        "_currentRenderer": Object {},
                        "_currentValue": undefined,
                        "_defaultValue": undefined,
                      }
                    }
                    theme={
                      Object {
                        "backgroundColor": "rgb(0, 63, 52)",
                        "color": "rgb(255, 127, 255)",
                      }
                    }
                  >
                    <SubscribeWrap
                      text="yet"
                    >
                      <_class3
                        text="yet"
                        theme={
                          Object {
                            "backgroundColor": "rgb(255, 192, 203)",
                            "color": "rgb(0, 128, 0)",
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "backgroundColor": "rgb(255, 192, 203)",
                              "color": "rgb(0, 128, 0)",
                              "padding": 10,
                            }
                          }
                        >
                          yet
                        </span>
                      </_class3>
                    </SubscribeWrap>
                  </_class2>
                </TransformContext>
              </SubscribeWrap>
            </_class2>
          </TransformContext>
        </SubscribeWrap>
      </_class>
    </ModuleContext>
  </_class>
</ModuleContext>
`;
